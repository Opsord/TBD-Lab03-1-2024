name: SonarQube Cloud
on:
  workflow_call:
  push:
    branches:
      - devSecOps---Pipeline
  pull_request:
    branches:
      - devSecOps---Pipeline

jobs:
  backend:
    name: Build and analyze Backend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'
      - name: Cache SonarQube Cloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build project
        run: mvn clean compile -f LAB-TBD/pom.xml
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_CLOUD_BACK }}
        with:
          args: >
            -Dsonar.projectKey=opsord_TBD-Lab03-1-2024-BACKEND
            -Dsonar.organization=opsord
            -Dsonar.sources=LAB-TBD/src/main/java
            -Dsonar.tests=LAB-TBD/src/test/java
            -Dsonar.java.binaries=LAB-TBD/target/classes

  frontend:
    needs: backend
    name: Build and analyze Frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Clean npm cache
        run: |
          rm -rf Frontend/node_modules
          rm -f Frontend/package-lock.json
          npm cache clean --force
      - name: Install frontend dependencies
        run: npm install --prefix Frontend
      - name: Run frontend build
        run: npm run build --prefix Frontend
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_CLOUD_FRONT }}
        with:
          args: >
            -Dsonar.projectKey=opsord_TBD-Lab03-1-2024-FRONTEND
            -Dsonar.organization=opsord
            -Dsonar.sources=Frontend/src
            -Dsonar.test.inclusions=Frontend/src/**/*.test.js
            -Dsonar.exclusions=Frontend/node_modules/**,Frontend/public/**
  call-zap:
    needs: frontend # This must be specified at the job level, not the step level
    uses: ./.github/workflows/zap-check.yaml
    secrets: inherit